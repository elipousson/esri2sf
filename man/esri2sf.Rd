% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/esri2sf.R
\name{esri2sf}
\alias{esri2sf}
\alias{esri2df}
\title{Import data from ESRI's ArcGIS Server}
\usage{
esri2sf(
  url,
  outFields = NULL,
  where = NULL,
  bbox = NULL,
  token = NULL,
  geomType = NULL,
  crs = 4326,
  progress = FALSE,
  replaceDomainInfo = FALSE,
  geometry = NULL,
  ...
)

esri2df(
  url,
  outFields = c("*"),
  where = NULL,
  token = NULL,
  progress = FALSE,
  replaceDomainInfo = FALSE,
  ...
)
}
\arguments{
\item{url}{character string for service url, e.g.
\url{https://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer/}.}

\item{outFields}{vector of fields you want to include. default is \code{NULL} for
all fields.}

\item{where}{string for where condition. Default is \code{NULL} for all rows.}

\item{bbox}{bbox class object from \code{\link[sf:st_bbox]{sf::st_bbox()}} or a simple feature object
that can be converted to a bounding box.}

\item{token}{string for authentication token (if needed). defaults to \code{NULL}.}

\item{geomType}{string specifying the layer geometry ('esriGeometryPolygon'
or 'esriGeometryPoint' or 'esriGeometryPolyline' - if \code{NULL}, will try to
be inferred from the server)}

\item{crs}{coordinate reference system (see \code{\link[sf:sf]{sf::st_sf()}}). Should either be
\code{NULL} or a CRS that can be handled by GDAL through sf::st_sf(). Default is
4326. \code{NULL} returns the feature in the same CRS that the layer is hosted
as in the Feature/Map Server.}

\item{progress}{Show progress bar with \code{\link[pbapply:pbapply]{pbapply::pblapply()}} if \code{TRUE}.
Default FALSE.}

\item{replaceDomainInfo}{add domain information to the return data frame?
Default \code{FALSE}.}

\item{geometry}{A sf object.}

\item{...}{additional named parameters to pass to the query. (e.g.
\code{"resultRecordCount = 3"})}
}
\value{
sf dataframe (\code{esri2sf}) or tibble dataframe (\code{esri2df}) or list or
dataframe (\code{esrimeta}).
}
\description{
These functions are the interface to the user.
}
\section{Functions}{
\itemize{
\item \code{esri2sf}: Retrieve spatial object

\item \code{esri2df}: Retrieve table object (no spatial data).
}}

\note{
When accessing services with multiple layers, the layer number must be
specified at the end of the service url (e.g.,
\url{https://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer/3}).
#' The list of layers and their respective id numbers can be found by viewing
the service's url in a web browser and viewing the "Layers" heading (e.g.,
\url{https://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer/#mapLayerList}).
}
\examples{
baseURL <- "https://sampleserver1.arcgisonline.com/ArcGIS/rest/"
url <- paste0(baseURL, "services/Demographics/ESRI_Census_USA/MapServer/3")
outFields <- c("POP2007", "POP2000")
where <- "STATE_NAME = 'Michigan'"
df <- esri2sf(url, outFields = outFields, where = where)
plot(df)

}
